#! /usr/bin/perl

# ----------------------------------------------------------------------
# cpFilesFromGitDir
# ===================
#
# Usage: ./cpFiles [-m "message"] -g gitdir
#
# History  2022/09/02 add cpBack to export to anywhere, plus opt_m
#          2022/09/01 first shot
# ----------------------------------------------------------------------
# Send all questions, wishes and complaints to the 
#
# Author    Urs Langenegger <urslangenegger@gmail.com>
# ----------------------------------------------------------------------

use File::Basename;
use Getopt::Std;
getopts('dg:m:');

# -- current "project" for backup storage
my $basedir = `pwd`;
chop($basedir);

# -- where to get the files from 
my $gitdir = "/psi/home/langenegger/data/mu3e-4.6-smb";
if ($opt_g) {
    $gitdir = $opt_g;
} else {
    die("you must specify the argument  -g gitdir\n");
}

my @files = getFileList();

# -- copy files
foreach $file (@files) {
    if (!$opt_d) {
        print("cp $gitdir/$file .\n");
        system("/bin/cp -a $gitdir/$file ."); # preserve time and do not follow symlinks
    } else {
        print("dbx cp $gitdir/$file .\n");
    }
}

# -- write cpBack to allow copying these files to anywhere (if you replace the first line in cpBack)
my $preamble = "";    
if (-e "cpBack") {
    open(IN, "cpBack") || die  "Hm?\n";
    while(<IN>){
        if (/^#/) {
            $preamble .= $_;
        }
    }
    close(IN);
}

open(IN, ">cpBack") || die "cannot open cpBack file\n";
print IN "$preamble";
if ($opt_m) {
    print IN "# $opt_m\n";
}
print IN "cd $gitdir\n";
foreach $file (@files) {
    my($barefile, $directories) = fileparse($file);
    print IN "cp $basedir/$barefile $file\n";
}
close(IN);

# ----------------------------------------------------------------------
sub getFileList {
    chdir($gitdir);
    @git = `git st --porcelain`;
    chdir($basedir);
    @lfiles = ();
    foreach $file (@git) {
        chop($file);
        $file =~ s/\s*M\s//;
        $file =~ s/\?\?\s//;
        if ($file =~ /\/$/) {
        } else {
            push(@lfiles, $file)
        }
    }

    # -- debug
    if (0) {
        foreach $file (@lfiles) {
            print("$file\n")
        }
    }
    
    return @lfiles;
}
